name: Docker Images
on:
  workflow_dispatch:
  pull_request:
  push:
permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write
jobs:
  check_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_KEY_GITHUB }}
      - name: Validate build configuration
        uses: docker/build-push-action@v6
        with:
          call: check
  build_image:
    needs: check_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_KEY_GITHUB }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: type=raw,value=latest,enable={{is_default_branch}}
      - name: Build
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
  docker_scout:
    needs:
      - build_image
      - check_image
    runs-on: ubuntu-latest
    steps:
      - name: Docker Scout
        continue-on-error: true
        uses: docker/scout-action@v1
        with:
          command: quickview,cves,recommendations
          dockerhub-user: mh0386
          dockerhub-password: ${{ secrets.TOKEN_KEY_DOCKER }}
          image: ghcr.io/${{ github.repository }}:latest
  trivy:
    needs:
      - build_image
      - check_image
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ghcr.io/alphaspheredotai/vocalizr:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'