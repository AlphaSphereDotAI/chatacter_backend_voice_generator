name: Code Analysis
on:
  push:
  pull_request:
env:
  UV_CACHE_DIR: /tmp/.uv-cache
  CLICOLOR: 1
permissions:
  contents: read
jobs:
  spelling:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4.2.2
      - name: Setup UV
        uses: ./.github/actions/uv
      - name: Run typos
        run: uv run typos . --config ./pyproject.toml
      - name: Minimize uv cache
        run: uv cache prune --ci
  ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4.2.2
      - name: Setup UV
        uses: ./.github/actions/uv
      - name: Run Ruff
        run: uv run ruff check .
      - name: Minimize uv cache
        run: uv cache prune --ci
  pyright:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4.2.2
      - name: Setup UV
        uses: ./.github/actions/uv
      - name: Run Pyright
        run: uv run pyright
      - name: Minimize uv cache
        run: uv cache prune --ci
  pylint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4.2.2
      - name: Setup UV
        uses: ./.github/actions/uv
      - name: Analysing the code with Pylint
        run: uv run pylint $(git ls-files '*.py') --output-format=github --rcfile pyproject.toml
      - name: Minimize uv cache
        run: uv cache prune --ci
  scout:
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/alphaspheredotai/vocalizr
          tags: latest
      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: quickview,recommendations,cves
          image: ${{ steps.meta.outputs.tags }}
          dockerhub-user: mh0386
          dockerhub-password: ${{ secrets.TOKEN_KEY_DOCKER }}
